{"version":3,"sources":["components/Form/form.module.css","components/Filter/filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Contactslist/Contactslist.js","components/Form/Form.js","components/Filter/Filter.js","components/Container/Container.js","components/Layout/Layout.js","App.js","index.js"],"names":["module","exports","addContacts","createAction","name","number","payload","id","uuidv4","deleteContacts","filter","items","createReducer","initialContacts","actions","state","action","contact","_","combineReducers","persistConfig","key","storage","blacklist","rootReducer","contacts","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","connect","visibleContacts","filterCase","toLowerCase","includes","getFilteredContacts","dispatch","onDeleteContacts","contactsAction","className","map","type","onClick","onSubmit","ContactsActions","useState","setName","setNumber","handleChange","evt","target","value","reset","s","form","preventDefault","onChange","pattern","title","required","onHandleFilter","event","Container","children","Layout","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.56ed0c1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__16XEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__2J1My\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import types from './contacts-types';\r\n\r\nconst addContacts = createAction('contacts/add', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\nconst deleteContacts = createAction('contacts/delete');\r\nconst filter = createAction('contacts/filter');\r\n\r\n// const addContacts = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// const deleteContacts = contactsId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactsId,\r\n// });\r\n\r\n// const filter = value => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContacts, deleteContacts, filter };\r\n","import { combineReducers } from 'redux';\r\nimport initialContacts from '../.././contacts.json';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n// import types from './contacts-types';\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [actions.addContacts]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContacts]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\nconst filter = createReducer('', {\r\n  [actions.filter]: (_, action) => action.payload,\r\n});\r\n// const items = (state = initialContacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n//     case types.DELETE:\r\n//       return state.filter(contact => contact.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({ items, filter });\r\n","import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import { combineReducers } from 'redux';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nexport default { store, persistor };\r\n// console.log(process.env.NODE_ENV);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\nimport './contactlist.css';\n\nfunction ContactsList({ contacts, onDeleteContacts }) {\n  return (\n    <ul className=\"contacts\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}:{number}\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst getFilteredContacts = (contacts, filter) => {\n  const filterCase = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterCase),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n\n  const visibleContacts = getFilteredContacts(items, filter);\n  return {\n    contacts: visibleContacts,\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(contactsAction.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport s from './form.module.css';\nimport ContactsActions from '../../redux/contacts/contacts-actions';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h2>Phonebook</h2>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(ContactsActions.addContacts(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from './filter.module.css';\nimport ContactsActions from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ value, onHandleFilter }) {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label className={s.filter}>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onHandleFilter} />\n      </label>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onHandleFilter: event => dispatch(ContactsActions.filter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport Container from '../Container/Container';\n\nconst Layout = ({ children }) => (\n  <>\n    <Container>{children}</Container>\n  </>\n);\n\nexport default Layout;\n","// import { useState, useEffect } from 'react';\nimport ContactsList from './components/Contactslist/Contactslist';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Layout from './components/Layout/Layout';\n\nexport default function App() {\n  // const [contacts, setContacts] = useState(\n  //   () =>\n  //     JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts,\n  // );\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <Layout>\n      <Form />\n      <Filter />\n      <ContactsList />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}